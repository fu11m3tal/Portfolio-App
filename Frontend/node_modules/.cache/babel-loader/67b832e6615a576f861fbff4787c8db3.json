{"ast":null,"code":"var _jsxFileName = \"/Users/syoh/Desktop/Portfolio-App/Frontend/src/example-components/Buttons/ButtonsLoading/index.js\";\nimport React, { Fragment } from 'react';\nimport clsx from 'clsx';\nimport { Fab, CircularProgress, Button } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { green } from '@material-ui/core/colors';\nimport CheckIcon from '@material-ui/icons/Check';\nimport SaveIcon from '@material-ui/icons/Save';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  wrapper: {\n    margin: theme.spacing(1),\n    position: 'relative'\n  },\n  buttonSuccess: {\n    backgroundColor: green[500],\n    '&:hover': {\n      backgroundColor: green[700]\n    }\n  },\n  fabProgress: {\n    color: green[500],\n    position: 'absolute',\n    top: -6,\n    left: -6,\n    zIndex: 1\n  },\n  buttonProgress: {\n    color: green[500],\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    marginTop: -12,\n    marginLeft: -12\n  }\n}));\nexport default function LivePreviewExample() {\n  const classes = useStyles();\n  const [loading, setLoading] = React.useState(false);\n  const [success, setSuccess] = React.useState(false);\n  const timer = React.useRef();\n  const buttonClassname = clsx({\n    [classes.buttonSuccess]: success\n  });\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(timer.current);\n    };\n  }, []);\n\n  const handleButtonClick = () => {\n    if (!loading) {\n      setSuccess(false);\n      setLoading(true);\n      timer.current = setTimeout(() => {\n        setSuccess(true);\n        setLoading(false);\n      }, 2000);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.wrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Fab, {\n    \"aria-label\": \"save\",\n    color: \"primary\",\n    className: buttonClassname,\n    onClick: handleButtonClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }, success ? /*#__PURE__*/React.createElement(CheckIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 24\n    }\n  }) : /*#__PURE__*/React.createElement(SaveIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 40\n    }\n  })), loading && /*#__PURE__*/React.createElement(CircularProgress, {\n    size: 68,\n    className: classes.fabProgress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.wrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    className: buttonClassname,\n    disabled: loading,\n    onClick: handleButtonClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, \"Accept terms\"), loading && /*#__PURE__*/React.createElement(CircularProgress, {\n    size: 24,\n    className: classes.buttonProgress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }))));\n}","map":{"version":3,"sources":["/Users/syoh/Desktop/Portfolio-App/Frontend/src/example-components/Buttons/ButtonsLoading/index.js"],"names":["React","Fragment","clsx","Fab","CircularProgress","Button","makeStyles","green","CheckIcon","SaveIcon","useStyles","theme","root","display","alignItems","wrapper","margin","spacing","position","buttonSuccess","backgroundColor","fabProgress","color","top","left","zIndex","buttonProgress","marginTop","marginLeft","LivePreviewExample","classes","loading","setLoading","useState","success","setSuccess","timer","useRef","buttonClassname","useEffect","clearTimeout","current","handleButtonClick","setTimeout"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\n\nimport clsx from 'clsx';\n\nimport { Fab, CircularProgress, Button } from '@material-ui/core';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { green } from '@material-ui/core/colors';\n\nimport CheckIcon from '@material-ui/icons/Check';\nimport SaveIcon from '@material-ui/icons/Save';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  wrapper: {\n    margin: theme.spacing(1),\n    position: 'relative'\n  },\n  buttonSuccess: {\n    backgroundColor: green[500],\n    '&:hover': {\n      backgroundColor: green[700]\n    }\n  },\n  fabProgress: {\n    color: green[500],\n    position: 'absolute',\n    top: -6,\n    left: -6,\n    zIndex: 1\n  },\n  buttonProgress: {\n    color: green[500],\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    marginTop: -12,\n    marginLeft: -12\n  }\n}));\n\nexport default function LivePreviewExample() {\n  const classes = useStyles();\n  const [loading, setLoading] = React.useState(false);\n  const [success, setSuccess] = React.useState(false);\n  const timer = React.useRef();\n\n  const buttonClassname = clsx({\n    [classes.buttonSuccess]: success\n  });\n\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(timer.current);\n    };\n  }, []);\n\n  const handleButtonClick = () => {\n    if (!loading) {\n      setSuccess(false);\n      setLoading(true);\n      timer.current = setTimeout(() => {\n        setSuccess(true);\n        setLoading(false);\n      }, 2000);\n    }\n  };\n  return (\n    <Fragment>\n      <div className={classes.root}>\n        <div className={classes.wrapper}>\n          <Fab\n            aria-label=\"save\"\n            color=\"primary\"\n            className={buttonClassname}\n            onClick={handleButtonClick}>\n            {success ? <CheckIcon /> : <SaveIcon />}\n          </Fab>\n          {loading && (\n            <CircularProgress size={68} className={classes.fabProgress} />\n          )}\n        </div>\n        <div className={classes.wrapper}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            className={buttonClassname}\n            disabled={loading}\n            onClick={handleButtonClick}>\n            Accept terms\n          </Button>\n          {loading && (\n            <CircularProgress size={24} className={classes.buttonProgress} />\n          )}\n        </div>\n      </div>\n    </Fragment>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}